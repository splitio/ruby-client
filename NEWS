5.1.3

Add cache wrapper to splits and segments.

5.1.2

Add input validation for client API methods: get_treatment, get_treatments, track, manager

5.1.1

Reduces the number of calls to Redis when calling #client.get_treatments using such cache adapter.

5.1.0

Prevent unhandled exceptions from raising when API get calls fail on Segments and Treatments.

5.0.3

Creates a new configuration parameter (impressions_bulk_size) to manage the max number of impressions sent to the Split backend on each post.
Changes impressions_queue_size so that it manages only the queue size in the memory adapter.
A backwards compatibility fail safe is included for users of previous SDK versions.

5.0.2

Turn Impression Listener into an optional SDK feature.
Prevents the impression thread from being started if a listener is not in place

5.0.1

Adding stop! method to the factory.
With this method the user will be able to stop the threads that queries the Split Service. This will be used in the before_fork configuration in Puma and Unicorn to stop the threads in the master process.

5.0.0

This is a breaking change in how users buckets are allocated.
Ruby SDK was wrongly picking up the right buckets and defauled to
use a "legacy hashing" instead of our moder murmur3 algo which is
what other SDKs use. Please reach out to support@split.io for help
on how to upgrade to this release.

4.5.0

Add JRuby support

4.4.0

Add the ability to send event data to split service (.track() api)

4.3.0

Add support for impression listener, there is an ability to use user-defined class to capture all impressions
Now you can apply attribute matcher to the traffic type

4.2.0

Introduce new matchers: boolean and regexp (string).
Remove unneeded dependencies
Introduce dependency matcher, which allows treatment of one split to depend on the evaluation of another.

4.1.0

Introduce set matchers: part of set, contains all and contains any, starts with, ends with and contains.

4.0.0

Add support for murmur3 hashing algorithm
Optimize gem memory usage

3.3.0

Add support for traffic allocation

3.1.0

Now supporting Redis as a cache adapter
Factory is build now as SplitIoClient::SplitFactoryBuilder.build('<API_KEY>')

3.0.2

now support also client.get_treatment( { :matching_key = 'bb' , "bucketing_key = ''}, ....)

2.0.1

No news for this release

2.0.0

Instantiation of the split client is now through a factory:

  factory = SplitIoClient::SplitFactory.new("rbk5je8be5qflpa047m17fe4ra", options)
  client = factory.client
  manager = factory.manager

1.0.4

Added AND combiner for conditions support. Added events_uri config param which is the url where the metrics post are send to.

1.0.3

This version of the gem fixes two minor bugs related to the config option for the refresh rates, as well as an inconsistency for the split definitions that are not created from the web app, but directly from the api instead.

1.0.2

Support for all the new matchers including: number comparison with >=, <=, =, between; date comparison with is on or before, is on or after, is on, between; attribute value in a defined set of values.
No other major updates for this release.

1.0.1

isTreatment was removed from the API
local environment file was removed to match the rest of the SDKs. "split".
No other major updates for this release.

1.0.0

No news for this release.
