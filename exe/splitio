#!/usr/bin/env ruby

lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'optparse'
require 'yaml'
require_relative '../lib/splitclient-rb'

ARGV << '-h' if ARGV.empty?

options = {}
opt_parser = OptionParser.new do |opts|
  opts.banner = "Usage: splitio [options]"

  opts.on("-cPATH", "--config=PATH", "Set the path to splitio.yml config file") do |c|
    options[:config_path] = c
  end

  opts.on("--base-uri=BASE_URI", "Set the base uri for Split SDK")
  opts.on("--events-uri=EVENTS_URI", "Set the events uri for Split SDK")
  opts.on("--read-timeout=READ_TIMEOUT", "Read timeout in seconds")
  opts.on("--connection-timeout=READ_TIMEOUT", "Read timeout in seconds")
  opts.on("--redis-url=REDIS_URL", "Set base uri for Split SDK")

  opts.on_tail("-h", "--help", "Prints this help") do
    puts opts
    exit
  end
end

begin
   opt_parser.parse!(ARGV)
 rescue OptionParser::InvalidOption => e
   puts e
   puts opt_parser
   exit(1)
 end

config = YAML.load_file(options[:config_path])
config.merge!(mode: :producer, cache_adapter: :redis)

SplitIoClient::SplitFactory.new(config[:api_key], config)
